'use strict';

const gOPD = require('gopd');
const bind = require('function-bind');

// Check if 'gOPD' is available and retrieve the 'length' property descriptor
const unbound = gOPD && gOPD(function () {}, 'length');

// Use bind to get the 'length' property descriptor of a bound function
// @ts-expect-error ts(2555): TS is overly strict with .call
const bound = gOPD && gOPD(bind.call(function () {}), 'length');

// Determine if unbound functions have configurable lengths
const functionsHaveConfigurableLengths = !!(unbound && unbound.configurable);

// Determine if unbound functions have writable lengths
const functionsHaveWritableLengths = !!(unbound && unbound.writable);

// Determine if bound functions have configurable lengths
const boundFnsHaveConfigurableLengths = !!(bound && bound.configurable);

// Determine if bound functions have writable lengths
const boundFnsHaveWritableLengths = !!(bound && bound.writable);

/** @type {import('./env')} */
module.exports = {
	__proto__: null,
	boundFnsHaveConfigurableLengths,
	boundFnsHaveWritableLengths,
	functionsHaveConfigurableLengths,
	functionsHaveWritableLengths
};
